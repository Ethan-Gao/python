2.1 序列概览
    a. 列表与元组主要区别
        列表可以修改，元组不能被修改，一般情况使用列表更合适，
        除非不希望序列被修改，比如字典的键，因为其不能被修改所以不能用列表
    b. 序列可包含其他序列，多重包含也可行

2.2 通用序列操作
    1. 索引
        从左向右：0代表第一个元素，从右向左：-1代表第一个元素，也就是最右边元素
        字符串可直接被索引，无须定义变量，比如"hello"[-1]
    2. 分片
        [x:y]代表从x开始到y结束，但是特别注意以下情况，以y = [1, 2, 3, 4, 5, 6, 7]为例
        a. y[0:3]-元素0,1,2
        b. y[5:7]-元素7并不存在，仅表示结尾，5:7表示元素5,6
        c. y[-3:-1]-倒数元素-2,-1
        d. y[-3:0]-空，0并不表示结尾位置，要表示倒数3个数，方法为:y[-3:]
        e. 同反向访问最后一个元素一个，访问前三个元素也可以:y[:3]
        f. 打印整个序列，表示为[:]
        g. 步长
            g1. 翻译为：每几个元素取一个
            g2. 默认步长为1，y[0:3]与y[0:3:1]相同，第三个参数为步长，
                显式设置大于1会跳过某些数字，比如y[0:3:2]会打印每3个元素中的第一个
            g3. 步长不能为0
            g4. 步长为负数，从右向左提取，而且开始点必须大于结束点，否则打印空
    3. 序列相加
        类型相同序列才能相加，比如[1, 2, 3] + "hello"会出错
    4. 序列乘法
        a. 数字x乘以序列，代表将序列重复x次
        b. 空列表用[]，若想创建占用空间的空列表则需要使用[None]来表示
    5. 成员资格
        使用in判断，返回bool值True和False
    6. 长度、最大、最小
        len、max、min取值即可

2.3 列表
    1. list函数
        适用将各种类型变为字符串，参数类型仅为str型
    2. 基本操作,注意点如下
        a. 不能对一个不存在的位置进行赋值，例如列表长度2给第100个元素赋值
        b. del不能直接删除整个列表，否则会提示位定义
        c. 分片赋值时，长度不必等长，因此能变相实现下列操作
            删除：指定某些元素为[]即可，与del作用类似
            插入: 只能位置然后添加新元素
            替换: 直接给某些位置赋值，改变原有值
    3. 列表方法
        append - 向末尾添加一个新元素，仅能添加一个
        count - 统计某元素出现的次数
        extend - 向列表结尾一次性追加另一个序列的多个值，类似c语言strcpy作用
            链接操作和extend区别: a = [1, 2], b = [3, 4]
            a + b - 链接操作并不修改原始序列，而是产生了一个新序列，打印a和b会发现不变
            a.extend(b) - extend修改了序列a，打印a变化
        index - 从列表中找出某个值第一个匹配项的索引位置
            未找到时会导致异常，程序终止
        insert - 将对象插入列表
        pop - 从列表删除一个数并返回其值，类似堆栈
        remove - 删除列表第一个匹配项，没有返回
            移除不存在时会导致异常，程序终止
        reverse - 反转元素列表
        sort - 对列表进行排序
            sort默认升序排列，无法改变方向，会修改原序列
        compare - 暂时不理解？？？？？
